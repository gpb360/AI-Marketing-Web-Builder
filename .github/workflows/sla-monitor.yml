# Epic 2: SLA Monitoring and Performance Tracking
name: SLA Monitor

on:
  schedule:
    - cron: '*/5 * * * *'  # Every 5 minutes
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  SLA_THRESHOLDS: |
    pr_review_time: 300      # 5 minutes
    build_time: 600          # 10 minutes
    test_execution: 480      # 8 minutes
    deployment_time: 900     # 15 minutes

jobs:
  monitor-sla:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      issues: write
      pull-requests: write
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: 'scripts/automation/package.json'
        
    - name: Install SLA monitoring dependencies
      run: |
        cd scripts/automation
        npm install
        
    - name: Monitor PR Review Times
      id: pr-review-monitor
      run: |
        node scripts/automation/sla-monitor.js --metric=pr_review_time --threshold=300
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Monitor Build Performance
      id: build-monitor
      run: |
        node scripts/automation/sla-monitor.js --metric=build_time --threshold=600
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Monitor Test Execution
      id: test-monitor
      run: |
        node scripts/automation/sla-monitor.js --metric=test_execution --threshold=480
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Generate SLA Report
      id: sla-report
      run: |
        node scripts/automation/sla-monitor.js --generate-report
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Escalate SLA Violations
      if: steps.pr-review-monitor.outputs.violation == 'true' || steps.build-monitor.outputs.violation == 'true' || steps.test-monitor.outputs.violation == 'true'
      uses: actions/github-script@v7
      with:
        script: |
          const violations = [];
          if ('${{ steps.pr-review-monitor.outputs.violation }}' === 'true') {
            violations.push('PR Review Time exceeded 5 minutes');
          }
          if ('${{ steps.build-monitor.outputs.violation }}' === 'true') {
            violations.push('Build Time exceeded 10 minutes');
          }
          if ('${{ steps.test-monitor.outputs.violation }}' === 'true') {
            violations.push('Test Execution exceeded 8 minutes');
          }
          
          if (violations.length > 0) {
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® SLA Violation Alert - Epic 2 Monitoring',
              body: `## SLA Violations Detected\n\n${violations.map(v => `- ‚ùå ${v}`).join('\n')}\n\n**Epic 2 Performance Standards:**\n- PR Review: ‚â§5 minutes\n- Build Time: ‚â§10 minutes\n- Test Execution: ‚â§8 minutes\n- Deployment: ‚â§15 minutes\n\n**Action Required:** Immediate investigation and resolution needed.\n\n*Generated by Epic 2 SLA Monitoring System*`,
              labels: ['epic-2', 'sla-violation', 'urgent', 'performance']
            });
          }
          
    - name: Update SLA Dashboard
      run: |
        node scripts/automation/sla-monitor.js --update-dashboard
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
  workflow-analytics:
    runs-on: ubuntu-latest
    needs: monitor-sla
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        
    - name: Collect Workflow Analytics
      run: |
        node scripts/automation/analytics-collector.js --epic=2 --collect-all
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Generate Performance Insights
      run: |
        node scripts/automation/analytics-collector.js --epic=2 --generate-insights
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}